package logger_messages

const (
	InternalServerError     = "an internal server error has occurred"
	PayloadValidationError  = "payload validation error: %s"
	QueryValidationError    = "query validation error: %s"
	DependencyFetchError    = "dependencies fetching error: %s"
	PayloadBindingError     = "unable to parse provided payload: %s"
	QueryBindingError       = "unable to bind query params: %s"
	ErrorMissingTransaction = "missing transaction object"
	ErrorBeginTransaction   = "error while creating transaction: %s"
	ErrorCloseTransaction   = "error in closing a transaction: %s"

	ErrorAddingRule                = "error in adding rule: %s"
	ErrorAddingCampaign            = "error in adding campaign: %s"
	ErrorFetchingCampaign          = "error in fetching campaign details: %s"
	ErrorFetchingCampaigns         = "error in fetching campaigns: %s"
	ErrorDeletingCampaign          = "error in deleting campaign: %s"
	ErrorDeletingCampaigns         = "error in deleting campaigns: %s"
	ErrorUpdatingCampaign          = "error in updating campaign details: %s"
	ErrorUpdatingRule              = "error in updating rule: %s"
	ErrorPatchingCampaign          = "error in patching campaign details: %s"
	ErrorPromotingVariation        = "error in promoting variation: %s"
	ErrorMergingCampaign           = "error in merging campaigns: %s"
	ErrorUpdatingSlot              = "error in updating slot: %s"
	ErrorCloningCampaign           = "error in cloning campaign: %s"
	ErrorLockCampaignsUpdate       = "error in locking campaigns: %s"
	ErrorLockingSlot               = "error in locking slots: %s"
	ErrorSettingCacheCampaign      = "error in setting cache for campaign: %s"
	ErrorInvalidatingCacheCampaign = "error in invalidating campaign from cache: %s"
	ErrorCampaignUnpublished       = "campaign is unpublished"
	ErrorCampaignCloneDecode       = "failed in decoding campaign"
	ErrorValidatingTestConfig      = "error in validating rule test config: %s"
	ErrorInvalidatingCacheRule     = "error in invalidating rule from cache: %s"
	ErrorRuleTypeMismatch          = "rule type is different from type in test-config"
	ErrorFetchingSlots             = "error in fetching slots: %s"
	ErrorSettingCacheSlots         = "error in setting cache for slots : %s"
	ErrorFetchingCacheSlots        = "error in fetching cached slots: %s"

	ErrorCheckingCampaign       = "error while checking if campaign exists: %s"
	ErrorCheckingRule           = "error while checking if rule exists: %s"
	ErrorFetchingRule           = "error in fetching rule: %s"
	ErrorFetchingRules          = "error in fetching rules: %s"
	ErrorDeletingRule           = "error in deleting rule: %s"
	ErrorDeletingRules          = "error in deleting rules: %s"
	ErrorRuleCloneDecode        = "failed in decoding rule"
	ErrorFetchingPage           = "error in fetching page details: %s"
	ErrorFetchingPages          = "error in fetching pages: %s"
	ErrorFetchingSlot           = "error in fetching slot details: %s"
	ErrorFetchingAllSlot        = "error in fetching all slot details: %s"
	ErrorSettingCacheSlot       = "error in setting cache for slot : %s"
	ErrorFetchingCacheSlot      = "error in fetching cached slot details: %s"
	ErrorDeletingSlot           = "error in deleting slot: %s"
	ErrorInsertingPages         = "error while inserting page record in database: %s"
	ErrorUpdatingPages          = "error occurred while updating slot id : %s"
	ErrorFetchingGoals          = "error in fetching goals: %s"
	ErrorAddingPages            = "error while adding pages: %s"
	ErrorAddingSlots            = "error while adding slot: %s"
	ErrorLanguageMissing        = "language is missing in query params"
	ErrorTransformingToResponse = "Error in transforming db results to page response: %s"

	ErrorDecisionDatabaseInstanceNotFound = "error in retrieving decision database instance"
	ErrorCacheInstanceNotFound            = "error in retrieving cache instance"
	ErrorHttpClientInstanceNotFound       = "error in retrieving lift api client"

	ErrorSettingCustomerAuthKey = "error in setting customer auth key"

	ErrorContentMissing               = "each config must have an explicit list of contents"
	ErrorSlotIDMissing                = "slot id is missing for dynamic rule"
	ErrorSlotDoesNotExist             = "slot does not exist"
	ErrorContentVariantDoesNotExist   = "provided content variant doesn't exist"
	ErrorDeletingPage                 = "error in deleting pages: %s"
	ErrorInvalidNumberOfCampaigns     = "2 or more different campaigns are required to merge"
	ErrorMergeCampaignStatus          = "status of campaigns should be 'published', 'unpublished' or 'completed' in order to merge them"
	ErrorMergeCampaignDifferentSiteID = "campaign should belong to %s site but belongs to %s"
	ErrorMergeCampaignMixedType       = "campaigns of type mixed are not supported"

	ErrorAddingCampaignsToGoals = "error while adding campaign to the goal: %s"

	ErrorPanicOccurred = "Panic occurred during processing the request: %v"

	ErrorAutoPromoteFailed = "error in auto promoting campaigns: %s"

	ErrorAuthentication = "could not authenticate the request: %s"

	ErrorHMACAuthRegExp              = "Could not compile regular expression for identifier: %s"
	ErrorHMACAuthMissingHeader       = "Missing required request header %s"
	ErrorHMACAuthReadBody            = "Failed to read request body: %s"
	ErrorHMACAuthParseTimestamp      = "Timestamp parse error: %s"
	ErrorHMACAuthTimestampTooFar     = "Timestamp given in X-Authorization-Timestamp (%d) is too far from current time."
	ErrorHMACAuthMissingHeaderParam  = "%s is required for authentication headers"
	ErrorHMACAuthInvalidBase64Secret = "The provided secret key is not in a valid base64 format: %s"
	ErrorHMACAuthFailed              = "authentication failed: %s"

	ErrorCaptureConfigLoadFail         = "could not load capture config: %s"
	ErrorCaptureRequestPreparationFail = "could not compose capture request: %s"
	ErrorCaptureRequestFail            = "could not capture visitor interaction: %s"
	VisitorInfoNotAvailable            = "visitor info not available"
	RuleAlreadyExists                  = "rule already exists"
	CampaignDoesntExist                = "campaign doesn't exists"
)
